<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_settings_menu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spr_height = 20;
spr_width = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (spr_width&lt;144){
    spr_width += 6;
}

if (spr_width==144 &amp;&amp; spr_height&lt;288){
    spr_height +=8;
}





if (mouse_x&lt;x || mouse_x&gt;x+sprite_width || mouse_y&lt;y || mouse_y&gt;y+sprite_height){
    if (point_distance(obj_settings.x, obj_settings.y, mouse_x, mouse_y)&gt;obj_settings.sprite_height/2){
        if (point_distance(mouse_y, mouse_y, obj_settings.y, obj_settings.y)&gt;obj_settings.sprite_height) || (point_distance(mouse_x, mouse_x, obj_settings.x, obj_settings.x)&gt;obj_settings.sprite_width/2+10){
            instance_destroy();
        }
    }
}
  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(spr_settings_menu, 0, x+sprite_width/2, y, spr_width/144, spr_height/288, 0, c_white, 1);

draw_set_color(c_white);
draw_set_font(f_main);
draw_set_halign(fa_center);

if (spr_height&gt;=248){
    draw_text(x+sprite_width/2, y+sprite_height-40, "Exit");
}
if (spr_height&gt;=208){
    draw_text(x+sprite_width/2, y+sprite_height-80, "Options");
}
if (spr_height&gt;=168){
    draw_text(x+sprite_width/2, y+sprite_height-120, "Credits");    
}
if (spr_height&gt;=128){
    draw_text(x+sprite_width/2, y+sprite_height-160, "Key bindings");
}
if (spr_height&gt;=88){
    draw_text(x+sprite_width/2, y+sprite_height-200, "Toplist");
}
if (spr_height&gt;=48){
    draw_text(x+sprite_width/2, y+sprite_height-240, "Valami");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
